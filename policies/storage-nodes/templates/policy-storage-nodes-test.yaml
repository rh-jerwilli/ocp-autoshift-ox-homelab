apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-storage-nodes-test
  namespace: {{ .Values.policy_namespace }}
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-cluster-storage-machineset
        spec:
          remediationAction: inform
          severity: high
          object-templates-raw: |
              {{ "{{-" }} if not (eq {{ "{{hub" }} index .ManagedClusterLabels "autoshift.io/storage-nodes-provider" | quote {{ "hub}}" }} "baremetal") {{ "}}" }}
              {{ "{{-" }} /* Specify the parameters needed to create the MachineSet  */ {{ "-}}" }}
              {{ "{{-" }} $machineset_role := "storage" {{ "}}" }}
              {{ "{{-" }} $zones_from_labels := list {{ "{{hub" }} range $label, $labelvalue := .ManagedClusterLabels {{ "hub}}" }}{{ "{{hub" }} if $label | hasPrefix "autoshift.io/storage-nodes-zone" {{ "hub}}" }}"{{ "{{hub" }} $labelvalue {{ "hub}}" }}"{{ "{{hub" }} end {{ "hub}}" }}{{ "{{hub" }} end {{ "hub}}" }} {{ "}}" }}
              {{ "{{-" }} $infrastructure_id := (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").status.infrastructureName {{ "}}" }}
              {{ "{{-" }} $worker_ms := (index (lookup "machine.openshift.io/v1beta1" "MachineSet" "openshift-machine-api" "").items 0) {{ "}}" }}
              {{ "{{-" }} /* Generate the MachineSet for each zone as specified or default to worker az */ {{ "-}}" }}
              {{ "{{-" }} range $zone := ternary (list $worker_ms.spec.template.spec.providerSpec.value.placement.availabilityZone ) $zones_from_labels (eq 0 (len $zones_from_labels)) {{ "}}" }}
              - complianceType: musthave
                objectDefinition:
                  apiVersion: machine.openshift.io/v1beta1
                  kind: MachineSet
                  metadata:
                    labels:
                      machine.openshift.io/cluster-api-cluster: {{ "{{" }} $infrastructure_id {{ "}}" }}
                    name: {{ "{{" }} $infrastructure_id {{ "}}" }}-{{ "{{" }} $machineset_role {{ "}}" }}-{{ "{{" }} $zone {{ "}}" }}
                    namespace: openshift-machine-api
                  status:
                    readyReplicas: {{ "{{hub" }} index .ManagedClusterLabels "autoshift.io/storage-nodes" {{ "hub}}" }}
              {{ "{{-" }} end {{ "}}" }}
              {{ "{{-" }} end {{ "}}" }}
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-cluster-storage-node-count
        spec:
          remediationAction: inform
          severity: high
          customMessage:
            noncompliant: >
              ‚ùå Incorrect number of nodes with storage label discovered;
              Expected: {{ "{{hub" }} index .ManagedClusterLabels "autoshift.io/storage-nodes" {{ "hub}}" }}
          object-templates-raw: |
              {{ "{{-" }} if (eq {{ "{{hub" }} index .ManagedClusterLabels "autoshift.io/storage-nodes-provider" | quote {{ "hub}}" }} "baremetal") {{ "}}" }}
                {{ "{{-" }} $storage_nodes := (lookup "v1" "Node" "" "" "cluster.ocs.openshift.io/openshift-storage").items {{ "}}" }}
                {{ "{{-" }} if not (eq (len $storage_nodes) ( {{ "{{hub-" }} index .ManagedClusterLabels "autoshift.io/storage-nodes" {{ "hub}}" }} | toInt)) {{ "}}" }}
              - complianceType: musthave
                objectDefinition:
                  apiVersion: v1
                  kind: Node
                  metadata:
                    labels:
                      incorrect-number-of-nodes: ''
                  status:
                    conditions:
                      - type: Ready
                        status: 'True'
                {{ "{{-" }} end {{ "}}" }}
              {{ "{{-" }} end {{ "}}" }}
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-cluster-storage-node-readiness
        spec:
          remediationAction: inform
          severity: high
          object-templates-raw: |
              {{ "{{-" }} if (eq {{ "{{hub" }} index .ManagedClusterLabels "autoshift.io/storage-nodes-provider" | quote {{ "hub}}" }} "baremetal") {{ "}}" }}
                {{ "{{-" }} $storage_nodes := (lookup "v1" "Node" "" "" "cluster.ocs.openshift.io/openshift-storage").items {{ "}}" }}
                {{ "{{-" }} range $storage_nodes {{ "}}" }}
              - complianceType: musthave
                objectDefinition:
                  apiVersion: v1
                  kind: Node
                  metadata:
                    name: {{ "{{" }} .metadata.name {{ "}}" }}
                    labels:
                      cluster.ocs.openshift.io/openshift-storage: ''
                  status:
                    conditions:
                      - type: Ready
                        status: 'True'
                {{ "{{-" }} end {{ "}}" }}
              {{ "{{-" }} end {{ "}}" }}
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: placement-policy-storage-nodes-test
  namespace: {{ .Values.policy_namespace }}
spec:
  clusterSets:
  {{- range $clusterSet, $value := .Values.managedClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  {{- range $clusterSet, $value := .Values.hubClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: 'autoshift.io/storage-nodes'
              operator: Exists
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: placement-policy-storage-nodes-test
  namespace: {{ .Values.policy_namespace }}
placementRef:
  name: placement-policy-storage-nodes-test
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: policy-storage-nodes-test
    apiGroup: policy.open-cluster-management.io
    kind: Policy