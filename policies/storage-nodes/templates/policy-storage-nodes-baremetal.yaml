apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-storage-nodes-baremetal
  namespace: {{ .Values.policy_namespace }}
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: create-storage-nodes-baremetal
        spec:
          object-templates-raw: |
            # Declare the template to create the node labels
            {{ "{{-" }} define "node_template" {{ "}}" }}
              {{ "{{-" }} range .nodes {{ "}}" }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Node
                metadata:
                  name: {{ "{{" }} .metadata.name {{ "}}" }}
                  labels:
                    node-role.kubernetes.io/infra: ''
                    cluster.ocs.openshift.io/openshift-storage: ''
              {{ "{{-" }} end {{ "}}" }}
            {{ "{{-" }} end {{ "}}" }}

            # Declare the node list to use with the template
            {{ "{{-" }} $nodes := list {{ "}}" }}

            # Build list of labels on hub
            {{ "{{hub-" }} $label_list := list {{ "hub}}" }}
            {{ "{{hub-" }} range $label, $labelvalue := .ManagedClusterLabels {{ "hub}}" }}
              {{ "{{hub-" }} if $label | hasPrefix "autoshift.io/storage-nodes-node" {{ "hub}}" }}
                {{ "{{hub-" }} $label_list = append $label_list $labelvalue {{ "hub}}" }}
              {{ "{{hub-" }} end {{ "hub}}" }}
            {{ "{{hub-" }} end {{ "hub}}" }}

            # Build list with labels if labels exist
            {{ "{{-" }} if not (eq 0 (len (list
              {{ "{{hub" }} range $label_list {{ "hub}}" }} {{ "{{hub" }} . | quote {{ "hub}}" }} {{ "{{hub" }} end {{ "hub}}" }}))) {{ "}}" }}

              # Build node list from labels
              {{ "{{-" }} range (list
                {{ "{{hub" }} range $label_list {{ "hub}}" }} {{ "{{hub" }} . | quote {{ "hub}}" }} {{ "{{hub" }} end {{ "hub}}" }}) {{ "}}" }}
                {{ "{{-" }} $nodes = append $nodes (lookup "v1" "Node" "" .) {{ "}}" }}
              {{ "{{-" }} end {{ "}}" }}

              # Call template
              {{ "{{-" }} template "node_template" (dict "nodes" $nodes) {{ "}}" }}

            # Build list with first {{ "{{hub" }} index .ManagedClusterLabels "autoshift.io/storage-nodes" {{ "hub}}" }} nodes instead of labels
            {{ "{{-" }} else {{ "}}" }}

              # Perform lookup of all nodes
              {{ "{{-" }} $all_nodes := (lookup "v1" "Node" "" "").items {{ "}}" }}

              # Build nodelist from number
              {{ "{{-" }} range until {{ "{{hub" }} index .ManagedClusterLabels "autoshift.io/storage-nodes" {{ "hub}}" }} {{ "}}" }}
                {{ "{{-" }} $nodes = append $nodes (index $all_nodes .) {{ "}}" }}
              {{ "{{-" }} end {{ "}}" }}

              # Call template
              {{ "{{-" }} template "node_template" (dict "nodes" $nodes) {{ "}}" }}
            {{ "{{-" }} end {{ "}}" }}
          pruneObjectBehavior: None
          remediationAction: enforce
          severity: high
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: placement-policy-storage-nodes-baremetal
  namespace: {{ .Values.policy_namespace }}
spec:
  clusterSets:
  {{- range $clusterSet, $value := .Values.managedClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  {{- range $clusterSet, $value := .Values.hubClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: 'autoshift.io/storage-nodes'
              operator: Exists
            - key: 'autoshift.io/storage-nodes-provider'
              operator: In
              values:
              - 'baremetal'
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: placement-policy-storage-nodes-baremetal
  namespace: {{ .Values.policy_namespace }}
placementRef:
  name: placement-policy-storage-nodes-baremetal
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: policy-storage-nodes-baremetal
    apiGroup: policy.open-cluster-management.io
    kind: Policy
