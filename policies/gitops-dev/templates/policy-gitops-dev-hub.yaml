{{- range $team, $value := .Values.teams }}
---
# This policy verifies the installation of the official & supported version of
# the GitOps Operator for different teams.
#
# Note that OpenShift 4.18 is required.
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-gitops-{{ $team }}-argocd
  namespace: {{ $.Values.policy_namespace }}
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  disabled: false
  dependencies:
    - name: policy-gitops-operator-install
      namespace: {{ $.Values.policy_namespace }}
      apiVersion: policy.open-cluster-management.io/v1
      compliance: Compliant
      kind: Policy
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: gitops-{{ $team }}-argocd
        spec:
          remediationAction: enforce
          severity: high
          object-templates:
            - complianceType: musthave
              objectDefinition:
                kind: Namespace
                apiVersion: v1
                metadata:
                  name: openshift-gitops-{{ $team }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: argoproj.io/v1beta1
                kind: ArgoCD
                metadata:
                  name: argocd-dev
                  namespace: openshift-gitops-{{ $team }}
                spec:
                  server:
                    resources:
                      limits:
                        cpu: {{ (($value.server).limits).cpu | default "500m" }}
                        memory: {{ (($value.server).limits).memory | default "256Mi" }}
                      requests:
                        cpu: {{ (($value.server).requests).cpu | default "125m" }}
                        memory: {{ (($value.server).requests).memory | default "128Mi" }}
                    route:
                      enabled: true
                  monitoring:
                    enabled: false
                  sso:
                    dex:
                      resources:
                        limits:
                          cpu: {{ (($value.dex).limits).cpu | default "500m" }}
                          memory: {{ (($value.dex).limits).memory | default "256Mi" }}
                        requests:
                          cpu: {{ (($value.dex).requests).cpu | default "125m" }}
                          memory: {{ (($value.dex).requests).memory | default "128Mi" }}
                      openShiftOAuth: true
                    provider: dex
                  rbac:
                    defaultPolicy: ''
                    policy: |
                      g, system:cluster-admins, role:admin
                    {{- range $value.gitops_rbac_policies }}
                      {{ . }}
                    {{- end }}
                    scopes: '[groups]'
                  repo:
                    resources:
                      limits:
                        cpu: {{ (($value.repo).limits).cpu | default "1000m" }}
                        memory: {{ (($value.repo).limits).memory | default "1024Mi" }}
                      requests:
                        cpu: {{ (($value.repo).requests).cpu | default "250m" }}
                        memory: {{ (($value.repo).requests).memory | default "256Mi" }}
                  ha:
                    resources:
                      limits:
                        cpu: {{ (($value.ha).limits).cpu | default "500m" }}
                        memory: {{ (($value.ha).limits).memory | default "256Mi" }}
                      requests:
                        cpu: {{ (($value.ha).requests).cpu | default "125m" }}
                        memory: {{ (($value.ha).requests).memory | default "128Mi" }}
                    enabled: {{ ($value.ha).enabled | default "false" }}
                  redis:
                    resources:
                      limits:
                        cpu: {{ (($value.redis).limits).cpu | default "500m" }}
                        memory: {{ (($value.redis).limits).memory | default "256Mi" }}
                      requests:
                        cpu: {{ (($value.redis).requests).cpu | default "125m" }}
                        memory: {{ (($value.redis).requests).memory | default "128Mi" }}
                  controller:
                    resources:
                      limits:
                        cpu: {{ (($value.controller).limits).cpu | default "2000m" }}
                        memory: {{ (($value.controller).limits).memory | default "2048Mi" }}
                      requests:
                        cpu: {{ (($value.controller).requests).cpu | default "250m" }}
                        memory: {{ (($value.controller).requests).memory | default "1024Mi" }}
                  applicationSet:
                    resources:
                      limits:
                        cpu: {{ (($value.applicationSet).limits).cpu | default "2" }}
                        memory: {{ (($value.applicationSet).limits).memory | default "1Gi" }}
                      requests:
                        cpu: {{ (($value.applicationSet).requests).cpu | default "250m" }}
                        memory: {{ (($value.applicationSet).requests).memory | default "512Mi" }}
                  resourceExclusions: |
                    - apiGroups:
                      - tekton.dev
                      clusters:
                      - '*'
                      kinds:
                      - TaskRun
                      - PipelineRun        
                  disableAdmin: {{ $value.disableAdmin | default "true" }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: argoproj.io/v1alpha1
                kind: RolloutManager
                metadata:
                  name: argo-rollout
                  namespace: openshift-gitops-{{ $team }}
                  labels:
                    example: basic
            - complianceType: musthave
              objectDefinition:
                apiVersion: cluster.open-cluster-management.io/v1beta1
                kind: Placement
                metadata:
                  name: openshift-gitops-{{ $team }}
                  namespace: openshift-gitops-{{ $team }}
                  annotations:
                    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
                    argocd.argoproj.io/sync-wave: "6"
                spec:
                  clusterSets:
                  {{- range $clusterSet, $value := $.Values.managedClusterSets }}
                    - {{ $clusterSet }}
                  {{- end }}
                  predicates:
                    - requiredClusterSelector:
                        labelSelector:
                          matchExpressions:
                            - key: 'autoshift.io/gitops-dev'
                              operator: In
                              values:
                              - 'true'
                            - key: 'autoshift.io/gitops-dev-team-{{ $team }}'
                              operator: In
                              values:
                              - 'hub'
                  tolerations:
                    - key: cluster.open-cluster-management.io/unreachable
                      operator: Exists
                    - key: cluster.open-cluster-management.io/unavailable
                      operator: Exists
            - complianceType: musthave
              objectDefinition:
                apiVersion: apps.open-cluster-management.io/v1beta1
                kind: GitOpsCluster
                metadata:
                  name: argo-acm-importer-{{ $team }}
                  namespace: openshift-gitops-{{ $team }}
                spec:
                  argoServer:
                    cluster: notused
                    argoNamespace: openshift-gitops-{{ $team }}
                  placementRef:
                    kind: Placement
                    apiVersion: cluster.open-cluster-management.io/v1beta1
                    name: openshift-gitops-{{ $team }}
                    namespace: openshift-gitops-{{ $team }}
            {{- range $clusterSet, $value := $.Values.managedClusterSets }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: cluster.open-cluster-management.io/v1beta2
                kind: ManagedClusterSetBinding
                metadata:
                  name: {{ $clusterSet }}
                  namespace: openshift-gitops-{{ $team }}
                spec:
                  clusterSet: {{ $clusterSet }}
            {{- end }}
            {{- range $clusterSet, $value := $.Values.hubClusterSets }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: cluster.open-cluster-management.io/v1beta2
                kind: ManagedClusterSetBinding
                metadata:
                  name: {{ $clusterSet }}
                  namespace: openshift-gitops-{{ $team }}
                spec:
                  clusterSet: {{ $clusterSet }}
            {{ end }}
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: placement-policy-gitops-{{ $team }}-argocd
  namespace: {{ $.Values.policy_namespace }}
spec:
  clusterSets:
  {{- range $clusterSet, $value := $.Values.hubClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: 'autoshift.io/gitops-dev'
              operator: In
              values:
              - 'true'
            - key: 'autoshift.io/gitops-dev-team-{{ $team }}'
              operator: In
              values:
              - 'hub'
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: placement-policy-gitops-{{ $team }}-argocd
  namespace: {{ $.Values.policy_namespace }}
placementRef:
  name: placement-policy-gitops-{{ $team }}-argocd
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: policy-gitops-{{ $team }}-argocd
    apiGroup: policy.open-cluster-management.io
    kind: Policy
{{- end }}