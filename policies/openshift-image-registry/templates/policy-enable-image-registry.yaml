# This policy verifies the installation of the official & supported version of
# the Compliance Operator on the managed clusters.
#
# If set to "enforce" it'll install the operator.
#
# Note that OpenShift 4.18 is required.
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-enable-image-registry
  namespace: {{ .Values.policy_namespace }}
  annotations:
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
spec:
  dependencies:
    - name: policy-image-registry-storage
      namespace: {{ .Values.policy_namespace }}
      apiVersion: policy.open-cluster-management.io/v1
      compliance: Compliant
      kind: Policy
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: image-registry-config
        spec:
          remediationAction: inform # will be overridden by remediationAction in parent policy
          severity: high
          object-templates-raw: |
            {{`{{hub- if eq (index .ManagedClusterLabels "autoshift.io/imageregistry-storage-type" | default "") "s3" hub}}`}}
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: image-registry-private-configuration-user
                  namespace: openshift-image-registry
                type: Opaque
                data:
                  REGISTRY_STORAGE_S3_ACCESSKEY: {{`{{ fromSecret "openshift-image-registry" "image-registry-storage" "AWS_ACCESS_KEY_ID" }}`}}
                  REGISTRY_STORAGE_S3_SECRETKEY: {{`{{ fromSecret "openshift-image-registry" "image-registry-storage" "AWS_SECRET_ACCESS_KEY" }}`}}
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: image-registry-s3-bundle
                  namespace: openshift-config
                data:
                  ca-bundle.crt: '{{`{{ fromSecret "openshift-ingress" (lookup "operator.openshift.io/v1" "IngressController" "openshift-ingress-operator" "default").spec.defaultCertificate.name "tls.crt" | base64dec | toRawJson | toLiteral }}`}}'
            {{`{{hub- end hub}}`}}
            - complianceType: musthave
              objectDefinition:
                apiVersion: imageregistry.operator.openshift.io/v1
                kind: Config
                metadata:
                  name: cluster
                spec:
                  logLevel: Normal
                  rolloutStrategy: {{`{{hub index .ManagedClusterLabels "autoshift.io/imageregistry-rollout-strategy" | default "Recreate" hub}}`}}
                  operatorLogLevel: Normal
                  requests:
                    read:
                      maxWaitInQueue: 0s
                    write:
                      maxWaitInQueue: 0s
                  replicas: {{`{{hub index .ManagedClusterLabels "autoshift.io/imageregistry-replicas" | default "1" hub}}`}}
                  managementState: {{`{{hub index .ManagedClusterLabels "autoshift.io/imageregistry-management-state" | default "Managed" hub}}`}}
                  storage:
                    {{`{{hub- if eq (index .ManagedClusterLabels "autoshift.io/imageregistry-storage-type" | default "") "pvc" hub}}`}}
                    managementState: Managed
                    pvc:
                      claim: image-registry-storage
                    {{`{{hub- else if eq (index .ManagedClusterLabels "autoshift.io/imageregistry-storage-type" | default "") "s3" hub}}`}}
                    managementState: Unmanaged
                    s3:
                      region: {{`{{hub index .ManagedClusterLabels "autoshift.io/imageregistry-s3-region" | default "us-east-1" hub}}`}}
                      bucket: {{`{{ fromConfigMap "openshift-image-registry" "image-registry-storage" "BUCKET_NAME" }}`}}
                      regionEndpoint: 'https://{{`{{ (lookup "route.openshift.io/v1" "Route" "openshift-storage" "s3").spec.host }}`}}'
                      virtualHostedStyle: false
                      encrypt: false
                      trustedCA:
                        name: image-registry-s3-bundle
                    {{`{{hub- end hub}}`}}
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: placement-policy-enable-image-registry
  namespace: {{ .Values.policy_namespace }}
spec:
  clusterSets:
  {{- range $clusterSet, $value := .Values.managedClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  {{- range $clusterSet, $value := .Values.hubClusterSets }}
    - {{ $clusterSet }}
  {{- end }}
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: 'autoshift.io/imageregistry'
              operator: In
              values:
                - 'true'
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: placement-policy-enable-image-registry
  namespace: {{ .Values.policy_namespace }}
placementRef:
  name: placement-policy-enable-image-registry
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: policy-enable-image-registry
    apiGroup: policy.open-cluster-management.io
    kind: Policy
